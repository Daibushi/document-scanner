/**
 * This program is free software: you can redistribute it and/or modify
 * it under the terms of the GNU General Public License as published by
 * the Free Software Foundation, either version 3 of the License, or
 * (at your option) any later version.

 * This program is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU General Public License for more details.

 * You should have received a copy of the GNU General Public License
 * along with this program.  If not, see <http://www.gnu.org/licenses/>.
 */
package richtercloud.document.scanner.components;

import javax.swing.JOptionPane;
import org.apache.commons.lang.exception.ExceptionUtils;
import richtercloud.document.scanner.gui.DocumentScanner;
import richtercloud.reflection.form.builder.message.Message;
import richtercloud.reflection.form.builder.message.MessageHandler;

/**
 * Wraps asynchronous execution of OCR recognition in a dialog which facilitates
 * thread joining because only {@link JDialog#setVisible(boolean) } has to be
 * invoked by callers.
 * @author richter
 */
public class OCRResultPanelProgressDialog extends javax.swing.JDialog {
    private static final long serialVersionUID = 1L;
    private OCRResultPanelFetcher retriever;
    /**
     * A {@link MessageHandler} used to display failures of OCR recognition routines after the dialog is hidden.
     */
    private MessageHandler messageHandler;

    /**
     * Creates new form OCRResultPanelProgressDialog1
     * @param parent
     * @param retriever
     * @param messageHandler
     */
    public OCRResultPanelProgressDialog(java.awt.Frame parent, OCRResultPanelFetcher retriever, MessageHandler messageHandler) {
        super(parent);
        initComponents();
        this.retriever = retriever;
        this.messageHandler = messageHandler;
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        progressBar = new javax.swing.JProgressBar();
        cancelButton = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle(DocumentScanner.generateApplicationWindowTitle("OCR recognition in progress", DocumentScanner.APP_NAME, DocumentScanner.APP_VERSION));
        setBounds(new java.awt.Rectangle(0, 0, 300, 50));
        setModal(true);

        cancelButton.setText("Cancel");
        cancelButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cancelButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(progressBar, javax.swing.GroupLayout.DEFAULT_SIZE, 376, Short.MAX_VALUE)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addComponent(cancelButton)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(progressBar, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(cancelButton)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void cancelButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cancelButtonActionPerformed
        try {
            this.retriever.cancelFetch();
        } catch(UnsupportedOperationException ex) {
            //valid outcome according to function definition
            JOptionPane.showConfirmDialog(this, //parent
                    "The OCR engine doesn't support cancelation, please be patient", //message
                    DocumentScanner.generateApplicationWindowTitle("OCR recognition cancelation not supported", DocumentScanner.APP_NAME, DocumentScanner.APP_VERSION), //title
                    JOptionPane.OK_OPTION, //optionType
                    JOptionPane.WARNING_MESSAGE //messageType
            );
        }
        this.setVisible(false);
    }//GEN-LAST:event_cancelButtonActionPerformed

    private String oCRResult;

    public String processOCR() {
        Thread oCRThread = new Thread() {
            @Override
            public void run() {
                try {
                    OCRResultPanelProgressDialog.this.oCRResult = retriever.fetch();
                    OCRResultPanelProgressDialog.this.setVisible(false);
                }catch(Exception ex) {
                    OCRResultPanelProgressDialog.this.setVisible(false);
                    OCRResultPanelProgressDialog.this.messageHandler.handle(new Message(ExceptionUtils.getRootCauseMessage(ex),
                            JOptionPane.ERROR_MESSAGE));
                }
            }
        };
        oCRThread.start();
        this.pack();
        this.setVisible(true);
        return this.oCRResult;
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton cancelButton;
    private javax.swing.JProgressBar progressBar;
    // End of variables declaration//GEN-END:variables
}
